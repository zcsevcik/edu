/*
 * main.cpp
 *
 * Author(s):      Radek Sevcik <zcsevcik@gmail.com>
 * Date:           2014/01/06
 *
 * This file is part of bf.
 */

#include <iostream>

/* ==================================================================== */
const char *program = "++++[>++++<-]>+[>+++[->++>++>+<<<]>+<<-]>>+.-----.>-.<+++.>--.++++++.>+..";
char memory[255];

/* ==================================================================== */
const char *ip = nullptr;
char *dp = nullptr;

/* ==================================================================== */
enum class instr {
    noop,
    end,
    inc,
    dec,
    incp,
    decp,
    sloop,
    eloop,
    get,
    put,
};

/* ==================================================================== */
instr fetch_decode()
{
    switch (*ip) {
    /* ================================================================ */
    default: return instr::noop;
    /* ================================================================ */
    case '\0': return instr::end;
    /* ================================================================ */
    case '+': return instr::inc;
    /* ================================================================ */
    case '-': return instr::dec;
    /* ================================================================ */
    case '>': return instr::incp;
    /* ================================================================ */
    case '<': return instr::decp;
    /* ================================================================ */
    case '[': return instr::sloop;
    /* ================================================================ */
    case ']': return instr::eloop;
    /* ================================================================ */
    case '.': return instr::put;
    /* ================================================================ */
    case ',': return instr::get;
    /* ================================================================ */
    }
}

/* ==================================================================== */
void execute(instr i) {
    switch (i) {
    /* ================================================================ */
    default:
    case instr::noop: break;
    /* ================================================================ */
    case instr::end: exit(0); break;
    /* ================================================================ */
    case instr::inc: ++(*dp); break;
    /* ================================================================ */
    case instr::dec: --(*dp); break;
    /* ================================================================ */
    case instr::incp: ++dp; break;
    /* ================================================================ */
    case instr::decp: --dp; break;
    /* ================================================================ */
    case instr::put: std::cout << *dp; break;
    /* ================================================================ */
    case instr::get: std::cin >> *dp; break;
    /* ================================================================ */
    case instr::sloop:
        if (!*dp) {
            int lvl = 1;
            while (lvl) {
                ++ip;
                instr i2 = fetch_decode();
                if (i2 == instr::sloop) ++lvl;
                else if (i2 == instr::eloop) --lvl;
            }
        }
        break;
    /* ================================================================ */
    case instr::eloop:
        if (*dp) {
            int lvl = 1;
            while (lvl) {
                --ip;
                instr i2 = fetch_decode();
                if (i2 == instr::eloop) ++lvl;
                else if (i2 == instr::sloop) --lvl;
            }
        }
        break;
    /* ================================================================ */
    }
    
    ++ip;
}

/* ==================================================================== */
int main()
{
    ip = program;
    dp = memory;
    
    for (;;) {
        instr i = fetch_decode();
        execute(i);
    }
    
    return 0;
}
